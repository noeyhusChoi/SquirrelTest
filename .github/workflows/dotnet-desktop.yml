name: Squirrel Windows Package (.NET Framework 4.7.2)

on:
  push:

jobs:
  build-and-package:
    runs-on: windows-latest

    steps:
      - name: 소스 체크아웃
        uses: actions/checkout@v4

      - name: NuGet.exe 다운로드
        run: |
          Invoke-WebRequest https://dist.nuget.org/win-x86-commandline/latest/nuget.exe -OutFile nuget.exe

      - name: NuGet Restore
        run: nuget.exe restore SquirrelTest.sln

      - name: Release 빌드
        shell: cmd
        run: |
          "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\MSBuild\Current\Bin\MSBuild.exe" SquirrelTest.sln /p:Configuration=Release

      - name: Squirrel.Windows 실행파일 다운로드
        run: |
            Invoke-WebRequest -Uri "https://github.com/Squirrel/Squirrel.Windows/releases/download/1.9.1/Squirrel.Windows-1.9.1.zip" -OutFile squirrel.windows.zip
            Expand-Archive squirrel.windows.zip -DestinationPath .\squirrel
        shell: pwsh
      
      - name: Assembly 버전 추출
        id: get_assembly_version
        shell: pwsh
        run: |
            $path = "SquirrelTest/Properties/AssemblyInfo.cs"
            $text = Get-Content $path -Raw
            # AssemblyVersion("1.2.3.4") 또는 AssemblyFileVersion("1.2.3.4")에서 버전 추출
            if ($text -match 'Assembly(File)?Version\("([\d\.]+)"\)') {
            $version = $Matches[2]
            echo "version=$version" | Out-File -FilePath $env:GITHUB_OUTPUT -Append
            Write-Host "Assembly version: $version"
            } else {
            throw "Assembly version not found!"
            }
          
      - name: nuspec 파일 버전 치환
        shell: pwsh
        run: |
            $version = "${{ steps.get_assembly_version.outputs.version }}"
            $nuspec = Get-Content SquirrelTest.nuspec -Raw
            $nuspec = $nuspec -replace '\$version\$', $version
            $nuspec | Out-File SquirrelTest.generated.nuspec -Encoding utf8
            Write-Host "nuspec after version update:"
            Get-Content SquirrelTest.generated.nuspec
          
      - name: SquirrelTest.generated.nuspec 내용 확인 (디버깅)
        run: type SquirrelTest.generated.nuspec
      
      - name: NuGet 패키지(nupkg) 생성
        run: |
          ./nuget.exe pack SquirrelTest.generated.nuspec

      - name: nupkg 파일명 변수 설정
        id: set_nupkg
        shell: pwsh
        run: |
            $nupkg = Get-ChildItem -Name *.nupkg | Select-Object -First 1
            echo "nupkg_name=$nupkg" | Out-File -FilePath $env:GITHUB_OUTPUT -Append
        
      - name: Squirrel 패키징
        shell: cmd
        run: |
            .\squirrel\Squirrel.exe --releasify ${{ steps.set_nupkg.outputs.nupkg_name }} --releaseDir out

      - name: Squirrel 로그
        run: |      
          type .\squirrel\SquirrelSetup.log
        shell: cmd

      - name: 태그 자동 생성 및 푸시
        shell: pwsh
        run: |
            $version = "${{ steps.get_assembly_version.outputs.version }}"
            git config user.name "github-actions"
            git config user.email "github-actions@github.com"
            git tag -f $version
            git push origin $version --force

      - name: Release 업로드
        uses: softprops/action-gh-release@v2
        with:
            tag_name: ${{ steps.get_assembly_version.outputs.version }}
            name: Release ${{ steps.get_assembly_version.outputs.version }}
            files: |
              out/Setup.exe
              out/RELEASES
              out/SquirrelTest-*-full.nupkg
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
